{"version":3,"sources":["01-main.js","02-preventDefault.js","03-search.js","04-favourites.js","05-removeFavourites.js","06-localStorage.js"],"names":[],"mappingsjGA;AACA;AACA;AACA;AACA;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["\"use strict\";\n\nconst btnSearch = document.querySelector(\".js-searchBtn\");\nconst form = document.querySelector(\".js-form\");\nconst inputSearch = document.querySelector(\".js-searchInput\");\nconst serieList = document.querySelector(\".js-serieList\");\nconst favouriteSerieList = document.querySelector(\".js-favouriteSerieList\");\nconst favouriteSection = document.querySelector(\".js-aside\");\n\nlet seriesResultArrow = [];\nlet favouriteListArrow = [];\n","//-------------------Prevent Default: prevent form from being submitted-------------------\n\nfunction handlerForm(event) {\n  event.preventDefault();\n}\nform.addEventListener(\"submit\", handlerForm);","\n//-------------------Activate connecttoAPI function when btnSearch is clicked -------------------\n\n\nfunction handlerEvent() {\n  seriesResultArrow = [];  //AQUÍ QUÉ!!!!! ¿HABRÍA QUE QUITARLO?\n  connectToApi();\n}\n\n\n//-------------------Connect to API server, brings data & store in JSON -------------------\n\nfunction connectToApi() {\n  const inputSearchValue = inputSearch.value;\n  console.log(\"entro\");\n  fetch(`http://api.tvmaze.com/search/shows?q=${inputSearchValue}`)\n    .then(function (response) {\n      console.log(response.json);\n      return response.json();\n    })\n    .then(function (data) {\n      console.log(data);\n      seriesResultArrow = data; \n      paintCard();\n      listenCard(); \n    });\n}\n\n\n//-------------------Paint serie cards from user search in HTML  -------------------\n\nconst paintCard = function () {\n  //console.log (\"entro en paintcard\");\n  let serieHtml = \"\";\n  //console.log (serieHtml);\n\n  for (let i = 0; i < seriesResultArrow.length; i++) {\n    //console.log (i);\n\n    //console.log(seriesResultArrow[i].show);\n    const series = seriesResultArrow[i].show;\n    //console.log (series);\n    //console.log (series.name);\n    //console.log (seriesResultArrow);\n    //console.log (series.id);\n    serieHtml += `<li class= \"serieElement js-serieElement\" id =\"${series.id}\">`;\n\n    if (series.image === null) {\n      serieHtml += `<img alt=\"foto carátula ${series.name}\" name= \"foto ${series.name}\" src=\"https://via.placeholder.com/210x295/B695C0/525252/?text=tv\">`;\n    } else {\n      serieHtml += `<img alt=\"foto carátula ${series.name}\" name= \"foto ${series.name}\" src=\"${series.image.medium}\" >`;\n    }\n    serieHtml += `<h3 class= \"serieTitle\">${series.name}</h3>`;\n    serieHtml += \"</li>\";\n  }\n  serieList.innerHTML = serieHtml;\n  //console.log (serieList);\n};\n\n\n//-------------------Listener of btnSearch when is clicked-------------------\n\nbtnSearch.addEventListener(\"click\", handlerEvent);","//-------------------Listener of serie cards when are clicked-------------------\n\nconst listenCard = function () {\n  //console.log (\"entro en función listenCard\");\n  const cardElements = document.querySelectorAll(\".js-serieElement\");\n  // console.log (cardElements);\n  for (let cardElement of cardElements) {\n    cardElement.addEventListener(\"click\", favouriteSeries);\n    //console.log (cardElement);\n  }\n}\n\n//-------------------Relate the ID of serie card marked as favourite with favourite arrow-------------------\n\nconst getObject = function (id) {\n  console.log(\"entro en getobject\");\n  console.log(seriesResultArrow);\n  console.log(favouriteListArrow);\n  console.log (seriesResultArrow.find(\n    (serieArrow) => serieArrow.show.id === parseInt(id)\n  ));\n  return seriesResultArrow.find(\n    serieArrow => serieArrow.show.id === parseInt(id)\n  );\n};\n\n\n//-------------------Saves as favourite serie cards clicked by user-------------------\n\n\nconst favouriteSeries = function (event) {\n  //la escuchamos más arriba en la función listenCard\n  //console.log (\"entro en función FavouriteSeries\");\n  //console.log (event); //targetCurrent es null y target es la imagen\n\n //-------------------Identify clicked element-------------------\n  const favouriteClicked = event.currentTarget;\n  console.log(favouriteClicked);\n  const favouriteClickedId = parseInt(event.currentTarget.id); \n  console.log(favouriteClickedId);\n  const object = getObject(favouriteClickedId);\n  console.log(object);\n\n\n  //-------------------Saves as favourite into the favourite List array serie cards clicked by user -------------------\n  console.log(favouriteListArrow);\n  const findFavourite = favouriteListArrow.indexOf(object); \n  console.log(findFavourite);\n\n\n  //esto significa que no está dentro del array\n  if (findFavourite === -1) {\n    favouriteSection.classList.remove(\"hidden\");\n    favouriteListArrow.push(object); \n    console.log(object);\n    console.log(favouriteListArrow);\n    console.log(favouriteClicked);\n    console.log(favouriteClicked.classList.add(\"classFavourite\"));\n    paintFavourites();\n\n    \n  } else {\n    const findFavouriteLength = favouriteListArrow + 1;\n    favouriteListArrow.splice(findFavouriteLength, 0);\n    console.log(favouriteClicked.classList.remove(\"classFavourite\")); //aquí tenemos que quitar también de la parte de favoritos si se clicka\n    //Aquí lo que queremos es que si ya está en el array no se vuelva a añadir si se clicka. Por lo que usamos el método splice. El primer parámetro sería el índice a partir del cual queremos añadir elementos y el segundo el número de elementos que queremos añadir a partir de la posición dada. Para ello creamos una nueva variable (que cogeremos como primer parámetro) y que será la longitud del array +1. En el segundo parámetro le diremos que no queremos que nos añada nada más.\n\n    console.log(favouriteListArrow);\n  }\n  \n  //paintCard();\n  //listenCard(); esto no estoy segura\n  setLocalStorage();\n};\n\n//-------------------Paint serie cards marked as favourite  in favouriste section of HTML  -------------------\n\nconst paintFavourites = function () {\n  let favouriteSerieHtml = \"\";\n  for (const favouriteObject of favouriteListArrow) {\n    console.log (favouriteListArrow);\n    console.log(favouriteObject);\n    favouriteSerieHtml += `<li class= \"favouriteSeries\">`;\n    if (favouriteObject.show.image === null) {\n      favouriteSerieHtml += `<img class= \"favouriteSeriesImg\" alt=\"foto carátula ${favouriteObject.show.name}\" name= \"foto ${favouriteObject.show.name}\" src=\"https://via.placeholder.com/210x295/B695C0/525252/?text=tv\">`;\n    } else {\n      favouriteSerieHtml += `<img class= \"favouriteSeriesImg\"alt=\"foto carátula ${favouriteObject.show.name}\" name= \"foto ${favouriteObject.show.name}\" src=\"${favouriteObject.show.image.medium}\" >`;\n    }\n    favouriteSerieHtml += `<h3 class = \"favouriteSeriesTitle\">${favouriteObject.show.name}</h3>`;\n    favouriteSerieHtml += `<button  class= \"btnRemove\" type=\"button\"> X </button>`\n    favouriteSerieHtml += \"</li>\";\n  }\n  favouriteSerieList.innerHTML = favouriteSerieHtml;\n};\n\n\n\n","//-------------------Remove as favourite serie cards which X icon is clicked by user-------------------\n\nconst listenRemoveBtn = function(){\n  \n}","//-------------------Set serie cards marked as favourites to user local Storage-------------------\n\nfunction setLocalStorage() {\n  localStorage.setItem(\"favourites\", JSON.stringify(favouriteListArrow));\n}\n\n//-------------------Get serie cards marked as favourites from user local Storage-------------------\n\nfunction getFromLocalStorage() {\n  const favouriteStorage = JSON.parse(localStorage.getItem(\"favourites\"));\n  if (favouriteStorage !== null) {\n    favouriteListArrow = favouriteStorage;\n    favouriteSection.classList.remove(\"hidden\");\n    paintFavourites();\n   /*  listenCard();  */ \n  } else {\n    favouriteSection.classList.add(\"hidden\");\n    return favouriteListArrow = [];\n    \n\n    //elemntSectionfav.classList.add('hidden'); \n  }\n}\n\ngetFromLocalStorage();\n\n/* const resetLocalStorage = function() {\n  localStorage.clear();\n  favouriteListArrow =[];\n  avouriteSection.classList.add('hidden');\n}\nelementButtonReset.addEventListener ('click', resetLocalStorage);*/"]}