{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["'use strict';\n\n//DECLARACIÓN DE VARIABLES GLOBALES\nconst btnSearch = document.querySelector (\".js-searchBtn\");\nconst inputSearch = document.querySelector (\".js-searchInput\");\nconst serieList = document.querySelector (\".js-serieList\");\nconst favouriteSerieList  = document.querySelector (\".js-favouriteSerieList\");\n\nlet seriesArrow = [];\nlet favouriteList = [];\n\n\n//CONECTAR CON EL SERVIDOR API cuando la usuaria hace click\n\n\nfunction connectToApi(){\n  const inputSearchValue = inputSearch.value;\n  //console.log (\"entro\");\n  fetch (`http://api.tvmaze.com/search/shows?q=${inputSearchValue}`)\n  .then (function (response) {\n    console.log(response.json);\n    return response.json(); \n  })\n  .then (function (data){\n    console.log(data);\n    seriesArrow = data; //me faltaba esto\n    paintCard();\n    listenCard();\n   /*  setLocalStorage(); */\n  })\n}\n\n//PINTAR TARJETAS DE SERIES\n\nconst paintCard = function(){\n  console.log (\"entro en paintcard\");\n  let serieHtml = \"\";\n  console.log (serieHtml);\n\n  for (let i=0; i < seriesArrow.length; i++){\n    console.log (i);\n    serieHtml += `<li class= \"serieElement js-serieElement\" id =\"${i}\">`;\n    console.log(seriesArrow[i].show);\n    const series = seriesArrow[i].show;\n    console.log (series);\n    console.log (series.name);\n  \n    if (series.image === null){\n      serieHtml += `<img alt=\"foto carátula ${series.name}\" name= \"foto ${series.name}\" src=\"https://via.placeholder.com/210x295/B695C0/525252/?text=tv\">`;\n    }\n    else {\n      \n      serieHtml += `<img alt=\"foto carátula ${series.name}\" name= \"foto ${series.name}\" src=\"${series.image.medium}\" >`;\n    }\n    serieHtml += `<h3 class= \"serieTitle\">${series.name}</h3>`;\n    serieHtml += \"</li>\"\n  }\n  serieList.innerHTML = serieHtml;\n  console.log (serieList);\n}\n\n//ESCUCHAR TARJETAS DE VISITA\n\nfunction listenCard(){\n  console.log (\"entro en función listenCard\");\n  const cardElements = document.querySelectorAll(\".js-serieElement\");\n  console.log (cardElements);\n  for (let cardElement of cardElements) {\n    cardElement.addEventListener('click', favouriteSeries);\n    console.log (cardElement);\n  }\n}\n\n//MARCAR COMO FAVORITAS LAS SERIES SELECCIONADAS POR LA USUARIA (poner escuchador de eventos)\n\nconst favouriteSeries = function(event){\n//la escuchamos más arriba en la función listenCard\n  console.log (\"entro en función FavouriteSeries\");\n  console.log (event); //targetCurrent es null y target es la imagen\n\n  //Identifico el elemento clickado\n  const favouriteClicked = event.currentTarget;\n  console.log(favouriteClicked);\n  const favouriteClickedId = parseInt(event.currentTarget.id); \n  console.log (favouriteClickedId );\n  const findFavourite = favouriteList.indexOf(favouriteClickedId);\n  \n\n  //Guardo los favoritos en un array let favouriteList = [];\n    //esto significa que no está dentro del array\n  if (findFavourite === -1){\n    favouriteList.push(favouriteClickedId);\n    console.log (favouriteList);\n    favouriteClicked.classList.add (\"favouriteSerie\");\n    //pensar si hay que poner un remove\n    paintFavourites();\n\n  } else {\n    favouriteList.splice (findFavourite, 1); \n      //aquí podríamos hacer una constante, \n      //splice nos indica que si ya está en el array, no queremos volverlo a ponerlo como favorito, por lo que lo quitamos, solo ese.\n  }\n/* paintCard();\nlistenCard(); */\n}\n\n\n//PINTAR FAVORITAS EN ASIDE:\n\nconst paintFavourites = function(){\n  favouriteSerieList.innerHTML += `${favouriteClicked}`;\n}\n\n\n    //Hay que mostrar un listado en la parte izquierda de la pantalla, debajo del formulario de búsqueda, con\n/* las series favoritas. Os recomendamos crear un variable o constante de tipo array en JS para almacenar las series favoritas.\nLas series favoritas deben seguir apareciendo a la izquierda aunque la usuaria realice otra búsqueda. */\n\n\n\n\n//LOCAL STORAGE\n\n//2.1. Diagrama de flujo cuando la usuaria hace un evento.\n\n/* function setLocalStorage(){\n  localStorage.setItem (\"textinStorage\", favouriteSeries);\n  const stringFavouriteSeries = JSON.stringify (favouriteSeries);\n  }; */\n  \n//2.2. Diagrama de flujo al arrancar la página.\n\n  /* function getFromLocalStorage(){\n  const stringFavouriteStorage = localStorage.getItem (\"textinStorage\");\n  const favouriteStorage = JSON.parse (stringFavouriteStorage);\n\n  if (favouriteStorage !== null) {\n //aquí falta\n  }\n};\n\n\nfavouriteSeries.addEventListener (\"keyup\", setLocalStorage); //aquí mirar el elemento sobre el que se pone el escuchador */\n\nbtnSearch.addEventListener (\"click\", connectToApi);\n\n\n/* README */"]}