{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["'use strict';\n\n\n//------------------------------DECLARACIÓN DE VARIABLES GLOBALES------------------------------------------\n\nconst btnSearch = document.querySelector (\".js-searchBtn\");\nconst form = document.querySelector (\".js-form\");\nconst inputSearch = document.querySelector (\".js-searchInput\");\nconst serieList = document.querySelector (\".js-serieList\");\nconst favouriteSerieList  = document.querySelector (\".js-favouriteSerieList\");\n\nlet seriesArrow = []; \nlet favouriteListArrow = [];\n\n\n//------------------------------PREVENT DEFAULT------------------------------\n\nfunction handleForm(event){\n  event.preventDefault();\n}\nform.addEventListener(\"submit\", handleForm);\n\n//------------------------------CONECTAR CON EL SERVIDOR API cuando la usuaria hace click------------------------------\n\nfunction handlerEvent(){\n  seriesArrow =  [];\n  connectToApi();\n}\n\n\nfunction connectToApi(){\n  const inputSearchValue = inputSearch.value;\n  console.log (\"entro\");\n  fetch (`http://api.tvmaze.com/search/shows?q=${inputSearchValue}`)\n  .then (function (response) {\n    console.log(response.json);\n    return response.json(); \n  })\n  .then (function (data){\n    console.log(data);\n    seriesArrow = data; //me faltaba esto\n    paintCard();\n    listenCard();\n    /* paintFavourites(); */ //DUDA\n    //setLocalStorage();  //DUDA\n  })\n\n}\n\nbtnSearch.addEventListener (\"click\", connectToApi);\n\n//------------------------------------PINTAR TARJETAS DE SERIES---------------------------\n\nconst paintCard = function(){\n  //console.log (\"entro en paintcard\");\n  let serieHtml = \"\";\n  //console.log (serieHtml);\n\n  for (let i=0; i < seriesArrow.length; i++){\n    //console.log (i);\n  \n    //console.log(seriesArrow[i].show);\n    const series = seriesArrow[i].show;\n    //console.log (series);\n    //console.log (series.name);\n    //console.log (seriesArrow);\n    //console.log (series.id);\n    serieHtml += `<li class= \"serieElement js-serieElement\" id =\"${series.id}\">`;\n  \n    if (series.image === null){\n      serieHtml += `<img alt=\"foto carátula ${series.name}\" name= \"foto ${series.name}\" src=\"https://via.placeholder.com/210x295/B695C0/525252/?text=tv\">`;\n    }\n    else {\n      \n      serieHtml += `<img alt=\"foto carátula ${series.name}\" name= \"foto ${series.name}\" src=\"${series.image.medium}\" >`;\n    }\n    serieHtml += `<h3 class= \"serieTitle\">${series.name}</h3>`;\n    serieHtml += \"</li>\"\n  }\n  serieList.innerHTML = serieHtml;\n  //console.log (serieList);\n}\n\n\n//ESCUCHAR TARJETAS DE VISITA\n\nfunction listenCard(){\n  //console.log (\"entro en función listenCard\");\n  const cardElements = document.querySelectorAll(\".js-serieElement\");\n // console.log (cardElements);\n  for (let cardElement of cardElements) {\n    cardElement.addEventListener('click', favouriteSeries);\n    //console.log (cardElement);\n  }\n}\n\n//RELACIONAR ID FAVORITOS CON ARRAY \n\nconst getObject = function(id){\n  console.log (\"entro en getobject\");\n  console.log (seriesArrow);\n  console.log (favouriteListArrow);\n\n \n  return seriesArrow.find(serieArrow => serieArrow.show.id === parseInt(id));\n\n}\n\n//MARCAR COMO FAVORITAS LAS SERIES SELECCIONADAS POR LA USUARIA (poner escuchador de eventos)\n\nconst favouriteSeries = function(event){\n//la escuchamos más arriba en la función listenCard\n   //console.log (\"entro en función FavouriteSeries\");\n   //console.log (event); //targetCurrent es null y target es la imagen\n\n  //Identifico el elemento clickado\n  const favouriteClicked = event.currentTarget;\n  console.log(favouriteClicked);\n  const favouriteClickedId = parseInt(event.currentTarget.id); \n  console.log (favouriteClickedId);\n  const object = getObject(favouriteClickedId);\n  console.log(object);\n  \n  //const findFavourite = favouriteListArrow.indexOf(favouriteClickedId);\n  //console.log (findFavourite);\n\n  //Guardo los favoritos en un array let favouriteListArrow = [];\n  const findFavourite = favouriteListArrow.indexOf(object);\n  console.log (findFavourite);\n\n    //esto significa que no está dentro del array\n  if (findFavourite === -1){\n    favouriteListArrow.push(object); //¡¡¡dar una vuelta a lo que añadir aquí!!!1 Habría que relacionar de alguna forma el id de favoritos con el array de objetos \n    console.log(object);\n    console.log (favouriteListArrow);\n    console.log(favouriteClicked);\n    console.log(favouriteClicked.classList.add (\"classFavourite\"));\n  \n    //pensar si hay que poner un remove\n\n    \n  } else {\n    const findFavouriteLength = favouriteListArrow +1;\n    favouriteListArrow.splice(findFavouriteLength, 0); \n    //Aquí lo que queremos es que si ya está en el array no se vuelva a añadir si se clicka. Por lo que usamos el método splice. El primer parámetro sería el índice a partir del cual queremos añadir elementos y el segundo el número de elementos que queremos añadir a partir de la posición dada. Para ello creamos una nueva variable (que cogeremos como primer parámetro) y que será la longitud del array +1. En el segundo parámetro le diremos que no queremos que nos añada nada más.\n    \n    console.log (favouriteListArrow);\n  }\n/*   paintFavourites(); \n  paintCard();\n  listenCard();\n  setLocalStorage(); */\n\n}\n\n\n//PINTAR FAVORITAS EN ASIDE:\n\nconst paintFavourites = function(){\n  let favouriteSerieHtml = \"\";\n  for (const favouriteObject of favouriteListArrow){\n    favouriteSerieHtml += `<li class= \"favouriteSeries\">`;\n    if (favouriteObject.show.image === null){\n      favouriteSerieHtml += `<img alt=\"foto carátula ${favouriteObject.show.name}\" name= \"foto ${favouriteObject.show.name}\" src=\"https://via.placeholder.com/210x295/B695C0/525252/?text=tv\">`;\n    }\n    else {\n      \n      favouriteSerieHtml += `<img alt=\"foto carátula ${favouriteObject.show.name}\" name= \"foto ${favouriteObject.show.name}\" src=\"${favouriteObject.show.image.medium}\" >`;\n    }\n    favouriteSerieHtml += `<h3>${favouriteObject.show.name}</h3>`\n    favouriteSerieHtml += \"</li>\";\n  } \n  favouriteSerieList.innerHTML = favouriteSerieHtml;\n\n}\n\n//LOCAL STORAGE\n\n//2.1. Diagrama de flujo cuando la usuaria hace un evento.\n\nfunction setLocalStorage(){\n  localStorage.setItem (\"favourites\", JSON.stringify(favouriteListArrow));\n};\n\n//2.2. Diagrama de flujo al arrancar la página.\n\nfunction getFromLocalStorage(){\n  const favouriteStorage = JSON.parse(localStorage.getItem(\"favourites\"));\n  if(favouriteStorage !== null){\n    favouriteListArrow = favouriteStorage; \n    paintFavourites();\n    listenCard();\n  }\n  else{\n  handlerEvent();\n  } \n};\ngetFromLocalStorage(); \n\n\n\n\n\n\n"]}