{"version":3,"sources":["01-main.js","02-search.js","03-favourites.js","04-removeFavourites.js","05-localStorage.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["\"use strict\";\n\nconst body = document.querySelector(\".js-body\");\nconst btnSearch = document.querySelector(\".js-searchBtn\");\nconst form = document.querySelector(\".js-form\");\nconst inputSearch = document.querySelector(\".js-searchInput\");\nconst serieList = document.querySelector(\".js-serieList\");\nconst favouriteSerieList = document.querySelector(\".js-favouriteSerieList\");\nconst favouriteSection = document.querySelector(\".js-section\");\n\nconst btnRemove = document.querySelector(\".js-btnRemove\");\n\nconst btnReset = document.querySelector(\".js-reset\");\n\nconst btnLog= document.querySelector (\".js-logBtn\");\n\nlet seriesResultArrow = [];\nlet favouriteListArrow = [];\n","\n//-------------------Activate connecttoAPI function when btnSearch is clicked -------------------\n\n\nfunction handlerEvent(event) {\n  event.preventDefault();\n  seriesResultArrow = []; \n  body.classList.remove (\"full_screen\");\n  body.classList.add(\"changeBackground\");\n  hideFavSection();\n  connectToApi();\n}\n\n\n//-------------------Connect to API server, brings data & store in JSON -------------------\n\nfunction connectToApi() {\n  const inputSearchValue = inputSearch.value;\n  fetch(`//api.tvmaze.com/search/shows?q=${inputSearchValue}`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (data) {\n      seriesResultArrow = data; \n      paintCard();\n      listenCard(); \n      });\n}\n\n\n//-------------------Paint serie cards from user search in HTML  -------------------\n\nconst paintCard = function () {\n  let serieHtml = \"\";\n  for (let i = 0; i < seriesResultArrow.length; i++) {\n    const series = seriesResultArrow[i].show;\n    serieHtml += `<li class= \"serieElement js-serieElement\" id =\"${series.id}\">`;\n\n    if (series.image === null) {\n      serieHtml += `<img alt=\"foto carátula ${series.name}\" name= \"foto ${series.name}\" src=\"https://via.placeholder.com/210x295/B695C0/525252/?text=tv\">`;\n    } else {\n      serieHtml += `<img alt=\"foto carátula ${series.name}\" name= \"foto ${series.name}\" src=\"${series.image.medium}\" >`;\n    }\n    serieHtml += `<h3 class= \"serieTitle\">${series.name}</h3>`;\n    serieHtml += \"</li>\";\n    serieList.innerHTML = serieHtml;\n  }\n};\n\n\n//-------------------Listener of btnSearch when is clicked-------------------\n\nbtnSearch.addEventListener(\"click\", handlerEvent);\n\n","//-------------------Listener of serie cards when are clicked-------------------\n\nconst listenCard = function () {\n  const cardElements = document.querySelectorAll(\".js-serieElement\");\n  for (let cardElement of cardElements) {\n    cardElement.addEventListener(\"click\", favouriteSeries);\n  }\n}\n\n\n//-------------------Saves as favourite serie cards clicked by user-------------------\n\n\nconst favouriteSeries = function (event) {\n\n //-------------------Identify clicked element-------------------\n  const favouriteClicked = event.currentTarget;\n  console.log(favouriteClicked);\n  const favouriteClickedId = parseInt(event.currentTarget.id);\n  console.log(favouriteClickedId);\n  console.log(seriesResultArrow);\n  const object = seriesResultArrow.find(\n  function (favouriteElement) {return favouriteElement.show.id === favouriteClickedId});\n\n  //-------------------Saves as favourite into the favourite List array serie cards clicked by user -------------------\n\n  const findFavourite = favouriteListArrow.findIndex (function (favouriteIndex) {return favouriteIndex.show.id === favouriteClickedId});\n \n  if (findFavourite === -1) {\n    favouriteListArrow.push(object); \n    favouriteClicked.classList.add(\"classFavourite\");\n    paintFavourites();\n    } \n    else {\n      const findFavouriteLength = favouriteListArrow.length + 1;\n      favouriteListArrow.splice(findFavouriteLength, 0);\n      favouriteClicked.classList.remove(\"classFavourite\");\n      alert (\"This series is already in your favourite list\"); \n     }\n    \n  setLocalStorage();\n};\n\n\n//-------------------Paint serie cards marked as favourite  in favourite section of HTML  -------------------\n\nconst paintFavourites = function () {\n  favouriteSection.classList.remove (\"hidden\");\n  let favouriteSerieHtml = \"\";\n  for (const favouriteObject of favouriteListArrow) {\n    \n    favouriteSerieHtml += `<li class= \"favouriteSeries\">`;\n    if (favouriteObject.show.image === null) {\n      favouriteSerieHtml += `<img class= \"favouriteSeriesImg\" alt=\"foto carátula ${favouriteObject.show.name}\" name= \"foto ${favouriteObject.show.name}\" src=\"https://via.placeholder.com/210x295/B695C0/525252/?text=tv\">`;\n    } else {\n      favouriteSerieHtml += `<img class= \"favouriteSeriesImg\"alt=\"foto carátula ${favouriteObject.show.name}\" name= \"foto ${favouriteObject.show.name}\" src=\"${favouriteObject.show.image.medium}\" >`;\n    }\n    favouriteSerieHtml += `<h3 class = \"favouriteSeriesTitle\">${favouriteObject.show.name}</h3>`;\n    favouriteSerieHtml += `<button  class= \"js-btnRemove btnRemove\" type=\"button\" id= ${favouriteObject.show.id}> X </button>`\n    favouriteSerieHtml += \"</li>\";\n  }\n  \n favouriteSerieList.innerHTML = favouriteSerieHtml;\n listenRemoveBtn(); \n}\n\n\n"," function hideFavSection(){\n  console.log(\"entro en hidefav\");\n  console.log (favouriteListArrow);\n  if (favouriteListArrow.length === 0){\n    favouriteSection.classList.add(\"hidden\");\n  }\n}\n\n\n//-------------------Listener of remove buttons when are clicked-------------------\n\n\nconst listenRemoveBtn = function(){\n  console.log(\"enetro en listenremove\");\n  const btnsRemove = document.querySelectorAll(\".js-btnRemove\");\n  for (const btnRemove of btnsRemove) {\n    btnRemove.addEventListener (\"click\", removeFavouriteSeries);\n  }\n}\n\n\n//-------------------Remove as favourite serie cards which X button is clicked by user-------------------\n\nconst removeFavouriteSeries = function(event){\n  console.log(\"entro en remove\");\n  \n  const btnClickedId = parseInt (event.currentTarget.id);\n  console.log(btnClickedId);\n\n  const findFavourite = favouriteListArrow.findIndex (function (favouriteIndex) {return favouriteIndex.show.id === btnClickedId});\n  if (findFavourite !== -1){\n    console.log(\"entrrrr\");\n    favouriteListArrow.splice(findFavourite,1);\n    console.log(favouriteListArrow);\n  }\n\n  setLocalStorage(); \n  paintFavourites();\n  if (favouriteListArrow.length === 0){\n    console.log(\"entro aquí\");\n    favouriteSection.classList.add(\"hidden\");\n  }\n\n} ","\n//-------------------Set serie cards marked as favourites to user local Storage-------------------\n\nfunction setLocalStorage() {\n  localStorage.setItem(\"favourites\", JSON.stringify(favouriteListArrow));\n}\n\n//-------------------Get serie cards marked as favourites from user local Storage-------------------\n\nfunction getFromLocalStorage() {\n  const favouriteStorage = JSON.parse(localStorage.getItem(\"favourites\"));\n  if (favouriteStorage !== null) {\n    favouriteListArrow = favouriteStorage;\n    paintFavourites();\n  } else {\n    return favouriteListArrow = [];\n  } \n  hideFavSection();\n}\n\ngetFromLocalStorage();\n\nfunction resetLocalStorage(event) {\n  console.log(\"entro en reset\");\n  favouriteListArrow = [];\n  localStorage.clear();\n  event.preventDefault();\n  paintFavourites(); \n  favouriteSection.classList.add(\"hidden\");\n  setLocalStorage();\n}\n\nbtnReset.addEventListener(\"click\", resetLocalStorage);\n\n//PENDIENTE DE MEJORAS\n\n//Cuando voy añadiendo favoritos, la lista de series se me va haciendo más pequeña.\n//Que el color de la tarjeta vaya acorde con las funciones\n//Que cuando hago click de nuevo en la tarjeta se me elimine de los favoritos"]}